//
//  QuestionareViewController.swift
//  KongBank
//
//  Created by Sorawit Trutsat on 1/4/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol QuestionareDisplayLogic: AnyObject {
    func displayLoanCondition(viewModel: Questionare.Loan.ViewModel)
}

class QuestionareViewController: UIViewController, QuestionareDisplayLogic {
    @IBOutlet weak var swtGovernment: UISwitch!
    @IBOutlet weak var swtCompany: UISwitch!
    @IBOutlet weak var swtOwnBusiness: UISwitch!
    @IBOutlet weak var lblMessage: UILabel!
    
    var interactor: QuestionareBusinessLogic?
    var router: (NSObjectProtocol & QuestionareRoutingLogic & QuestionareDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = QuestionareInteractor()
        let presenter = QuestionarePresenter()
        let router = QuestionareRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        getLoanCondition()
    }
    
    func getLoanCondition() {
        let request = Questionare.Loan.Request(carrer: .governmentEmployee)
        interactor?.getLoanCondition(request: request)
    }
    
    func displayLoanCondition(viewModel: Questionare.Loan.ViewModel) {
        swtGovernment.isOn = viewModel.isGovernmentEmployeeOpen
        swtCompany.isOn = viewModel.isCompanyEmployeeOpen
        swtOwnBusiness.isOn = viewModel.isOwnBussinessEmployeeOpen
        lblMessage.text = viewModel.message
    }
    
    @IBAction func swtGovernmentValueChange(_ sender: UISwitch) {
        let request = Questionare.Loan.Request(carrer: .governmentEmployee)
        interactor?.getLoanCondition(request: request)
    }
    
    @IBAction func swtCompanyValueChange(_ sender: UISwitch) {
        let request = Questionare.Loan.Request(carrer: .companyEmployee)
        interactor?.getLoanCondition(request: request)
    }
    
    @IBAction func swtOwnBusinessValueChange(_ sender: UISwitch) {
        let request = Questionare.Loan.Request(carrer: .ownBusiness)
        interactor?.getLoanCondition(request: request)
    }
}
